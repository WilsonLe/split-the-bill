rules_version = '2';
service cloud.firestore {
  function incomingData(){
    return request.resource.data;
  }

  function existingData(){
    return resource.data;
  }

  function isLoggedIn(){
    return request.auth != null;
  }

  function isCreator() {
    return request.auth.uid == existingData().creator.uid;
  }

  function updatedMembers(){
    return incomingData().diff(existingData()).changedKeys().hasOnly(['members', 'membersUid']);
  }

  function addedMemberIsThemself(){
    return (request.auth.uid in incomingData().membersUid)
    && !(request.auth.uid in existingData().membersUid);
  }

  function removedMemberIsThemself(){
    return !(request.auth.uid in incomingData().membersUid) 
    && (request.auth.uid in existingData().membersUid);
  }

  function updatedExpenses(){
    return incomingData().diff(existingData()).changedKeys().hasOnly(['expenses']);
  }

  function updatedExpenseIsThemself(){
    return (request.auth.uid in existingData().expenses.toSet().difference(incomingData().expenses.toSet()))
  }

  function removedExpenseIsThemself(){
    return !(request.auth.uid in incomingData().membersUid) 
    && (request.auth.uid in existingData().membersUid);
  }

	function eventTypeCheck(){
  	return incomingData().code is string
    && incomingData().createdAt is timestamp
    && incomingData().name is string
    && incomingData().creator is map
    && incomingData().members is list
    && incomingData().membersUid is list
  }
  
  match /databases/{database}/documents {
    match /events/{event} {
      allow read:
      	if isLoggedIn();
      allow create:
        if isLoggedIn() 
        && eventTypeCheck();
      allow delete:
        if isLoggedIn() 
        && isCreator();
      allow update:
        if isLoggedIn()
        && ((updatedMembers() 
        && (addedMemberIsThemself() || removedMemberIsThemself()))
        || ((isCreator() && updatedExpenses())
        || ((updatedExpenses())
        && (updatedExpenseIsThemself() || removedExpenseIsThemself()))));
    }
    match /events/{event}/expenses/{expense}{
      allow read, write: if true;
    }
    match /versions/{version} {
      allow read;
      allow write: if false;
    }
  }
}



